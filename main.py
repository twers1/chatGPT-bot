import os
import openai

from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from dotenv import load_dotenv

load_dotenv()

TOKEN = os.getenv("TOKEN")
openai.api_key = os.getenv("OPENAI_API_KEY")

bot = Bot(TOKEN)
dp = Dispatcher(bot)


@dp.message_handler(commands=['start'])
async def cmd_start(message: types.Message):
  await message.answer('üñ•–ü—Ä–∏–≤–µ—Ç! –Ø chatGPT\n\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —á–∞—Ç —Å–æ –º–Ω–æ–π - –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∑–∞–ø—Ä–æ—Å –∏ —è —Ç–µ–±–µ –æ—Ç–≤–µ—á—É')


@dp.message_handler()
async def start(message: types.Message):
    response = openai.Completion.create(
      model="text-davinci-003",
      prompt=message.text,
      temperature=0,
      max_tokens=1400,
      top_p=1,
      frequency_penalty=0.0,
      presence_penalty=0.0,
      stop=["You"]
    )

    await message.answer(response['choices'][0]['text'])


if __name__ == '__main__':
    print(
        "                                                      ‚ñà‚ñà‚ñà‚ñà \n ‚ñë‚ñë‚ñà‚ñà‚ñà                                               ‚ñë‚ñë‚ñà‚ñà‚ñà \n ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà \n‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë   ‚ñë‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñë‚ñë   ‚ñë‚ñà‚ñà‚ñà \n  ‚ñë‚ñà‚ñà‚ñà     ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñë‚ñë ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà \n  ‚ñë‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë   ‚ñë‚ñà‚ñà‚ñà      ‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà \n  ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñë‚ñà‚ñà‚ñà‚ñà   ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà\n   ‚ñë‚ñë‚ñë‚ñë‚ñë     ‚ñë‚ñë‚ñë‚ñë ‚ñë‚ñë‚ñë‚ñë     ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  ‚ñë‚ñë‚ñë‚ñë‚ñë     ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  ‚ñë‚ñë‚ñë‚ñë‚ñë \n                                                           \n                                                           \n                                                           \nBot started successfully")
    executor.start_polling(dp)
    print("Bot stopped")
